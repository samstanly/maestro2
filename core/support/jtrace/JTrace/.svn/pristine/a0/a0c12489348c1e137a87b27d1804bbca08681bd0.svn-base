/*
 * frmMain.java
 *
 * Created on 17 de Março de 2008, 14:46
 */

package jmiolotrace;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Pattern;

import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 * 
 * @author Administrador
 */

public class frmMain extends javax.swing.JFrame {

	/** Creates new form frmMain */
	public frmMain() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jTabbedPane1 = new javax.swing.JTabbedPane();
		jScrollPane1 = new javax.swing.JScrollPane();
		txaTodas = new javax.swing.JTextArea();
		jScrollPane2 = new javax.swing.JScrollPane();
		txaAtual = new javax.swing.JTextArea();
		jScrollPane3 = new javax.swing.JScrollPane();
		txaTrace = new javax.swing.JTextArea();
		jScrollPane4 = new javax.swing.JScrollPane();
		txaUses = new javax.swing.JTextArea();
		jScrollPane5 = new javax.swing.JScrollPane();
		txaSQL = new javax.swing.JTextArea();
		jScrollPane6 = new javax.swing.JScrollPane();
		txaLogin = new javax.swing.JTextArea();
		jScrollPane7 = new javax.swing.JScrollPane();
		txaHandler = new javax.swing.JTextArea();
		jScrollPane8 = new javax.swing.JScrollPane();
		txaProfile = new javax.swing.JTextArea();
		jScrollPane9 = new javax.swing.JScrollPane();
		txaError = new javax.swing.JTextArea();
		jScrollPane10 = new javax.swing.JScrollPane();
		txaCustom = new javax.swing.JTextArea();
		jScrollPane11 = new javax.swing.JScrollPane();
		txaBusca = new javax.swing.JTextArea();
		btnPara = new javax.swing.JButton();
		lblCon = new javax.swing.JLabel();
		btnLimpa = new javax.swing.JButton();
		btnComeca = new javax.swing.JButton();
		btnSobre = new javax.swing.JButton();
		txtPorta = new javax.swing.JTextField();
		txtBusca = new javax.swing.JTextField();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		chbLimpa = new javax.swing.JCheckBox();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("JMioloTrace");
		setFont(new java.awt.Font("Albertus", 0, 8)); // NOI18N

		jTabbedPane1.setToolTipText("null");

		txaTodas.setColumns(20);
		txaTodas.setFont(new java.awt.Font("Monospaced", 0, 12));
		txaTodas.setLineWrap(true);
		txaTodas.setRows(5);
		txaTodas.setWrapStyleWord(true);
		jScrollPane1.setViewportView(txaTodas);

		jTabbedPane1.addTab("Todas", jScrollPane1);

		txaAtual.setColumns(20);
		txaAtual.setFont(new java.awt.Font("Monospaced", 0, 12));
		txaAtual.setLineWrap(true);
		txaAtual.setRows(5);
		txaAtual.setWrapStyleWord(true);
		jScrollPane2.setViewportView(txaAtual);

		jTabbedPane1.addTab("Pág.Atual", jScrollPane2);

		txaTrace.setColumns(20);
		txaTrace.setFont(new java.awt.Font("Monospaced", 0, 12));
		txaTrace.setLineWrap(true);
		txaTrace.setRows(5);
		txaTrace.setWrapStyleWord(true);
		jScrollPane3.setViewportView(txaTrace);

		jTabbedPane1.addTab("Trace", jScrollPane3);

		txaUses.setColumns(20);
		txaUses.setFont(new java.awt.Font("Monospaced", 0, 12));
		txaUses.setLineWrap(true);
		txaUses.setRows(5);
		txaUses.setWrapStyleWord(true);
		jScrollPane4.setViewportView(txaUses);

		jTabbedPane1.addTab("Uses", jScrollPane4);

		txaSQL.setColumns(20);
		txaSQL.setFont(new java.awt.Font("Monospaced", 0, 12));
		txaSQL.setLineWrap(true);
		txaSQL.setRows(5);
		txaSQL.setWrapStyleWord(true);
		jScrollPane5.setViewportView(txaSQL);

		jTabbedPane1.addTab("SQL", jScrollPane5);

		txaLogin.setColumns(20);
		txaLogin.setFont(new java.awt.Font("Monospaced", 0, 12));
		txaLogin.setLineWrap(true);
		txaLogin.setRows(5);
		txaLogin.setWrapStyleWord(true);
		jScrollPane6.setViewportView(txaLogin);

		jTabbedPane1.addTab("Login", jScrollPane6);

		txaHandler.setColumns(20);
		txaHandler.setFont(new java.awt.Font("Monospaced", 0, 12));
		txaHandler.setLineWrap(true);
		txaHandler.setRows(5);
		txaHandler.setWrapStyleWord(true);
		jScrollPane7.setViewportView(txaHandler);

		jTabbedPane1.addTab("Handler", jScrollPane7);

		txaProfile.setColumns(20);
		txaProfile.setFont(new java.awt.Font("Monospaced", 0, 12));
		txaProfile.setLineWrap(true);
		txaProfile.setRows(5);
		txaProfile.setWrapStyleWord(true);
		jScrollPane8.setViewportView(txaProfile);

		jTabbedPane1.addTab("Profile", jScrollPane8);

		txaError.setColumns(20);
		txaError.setFont(new java.awt.Font("Monospaced", 0, 12));
		txaError.setLineWrap(true);
		txaError.setRows(5);
		txaError.setWrapStyleWord(true);
		jScrollPane9.setViewportView(txaError);

		jTabbedPane1.addTab("Error", jScrollPane9);

		txaCustom.setColumns(20);
		txaCustom.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
		txaCustom.setLineWrap(true);
		txaCustom.setRows(5);
		txaCustom
				.setToolTipText("o comportamento da guia [Custom] é diferente das demais: após entrar, só para quando ocorrer outra tag, como [SQL], [Trace], etc.");
		txaCustom.setWrapStyleWord(true);
		jScrollPane10.setViewportView(txaCustom);

		jTabbedPane1.addTab("Custom", jScrollPane10);

		txaBusca.setColumns(20);
		txaBusca.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
		txaBusca.setLineWrap(true);
		txaBusca.setRows(5);
		// txaBusca.setToolTipText("o comportamento da guia [Custom] é diferente das demais: após entrar, só para quando ocorrer outra tag, como [SQL], [Trace], etc.");
		txaBusca.setWrapStyleWord(true);
		jScrollPane11.setViewportView(txaBusca);

		jTabbedPane1.addTab("Busca", jScrollPane11);

		btnPara.setText("para");
		btnPara.setEnabled(false);
		btnPara.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnParaActionPerformed(evt);
			}
		});

		lblCon.setFont(new java.awt.Font("Tahoma", 1, 12));
		lblCon.setForeground(new java.awt.Color(255, 51, 51));
		lblCon.setText("não conectado");

		btnLimpa.setText("limpa");
		btnLimpa.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnLimpaActionPerformed(evt);
			}
		});

		btnComeca.setText("começa");
		btnComeca.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnComecaActionPerformed(evt);
			}
		});

		btnSobre.setFont(new java.awt.Font("Tahoma", 0, 10));
		btnSobre.setText("sobre");
		btnSobre.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSobreActionPerformed(evt);
			}
		});

		txtPorta.setText("9999");

		jLabel1.setText("porta");

		chbLimpa.setSelected(true);
		chbLimpa.setText("limpeza automatica a cada 1000 linhas");
		chbLimpa.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				chbLimpaActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jTabbedPane1,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		738,
																		Short.MAX_VALUE)
																.addContainerGap())
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addComponent(
																		btnComeca)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		btnPara)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		btnLimpa)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		lblCon,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		252,
																		Short.MAX_VALUE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						chbLimpa))																				
																.addGroup(
																		layout.createSequentialGroup()
																				.addComponent(
																						jLabel2)
																				.addGap(4,
																						4,
																						4)
																				.addComponent(
																						txtBusca,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						200,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addGap(108,
																						108,
																						108)
																				.addComponent(
																						btnSobre))
												.addGap(16, 16, 16);
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(btnPara)
												.addComponent(btnLimpa)
												.addComponent(
														lblCon,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														23,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(btnComeca)
												.addComponent(btnSobre)
												.addComponent(
														txtBusca,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel2))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(chbLimpa)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jTabbedPane1,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										488, Short.MAX_VALUE).addContainerGap()));

		java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit()
				.getScreenSize();
		setBounds((screenSize.width - 778) / 2, (screenSize.height - 604) / 2,
				778, 604);
	}// </editor-fold>//GEN-END:initComponents

	private void btnParaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnParaActionPerformed
		try {
			para = true;
			th.interrupt();
			lblCon.setText("não conectado");
			srv.close();
			btnPara.setEnabled(false);
			btnComeca.setEnabled(true);
			txtPorta.setEnabled(true);
		} catch (Exception e) {
			lblCon.setText("???");
			JOptionPane.showMessageDialog(this,
					"Erro na conexão: " + e.getMessage());
		}
	}// GEN-LAST:event_btnParaActionPerformed

	private void btnLimpaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLimpaActionPerformed
		txaAtual.setText("");
		txaTodas.setText("");
		txaTrace.setText("");
		txaUses.setText("");
		txaSQL.setText("");
		txaLogin.setText("");
		txaHandler.setText("");
		txaProfile.setText("");
		txaError.setText("");
		txaCustom.setText("");
		txaBusca.setText("");
	}// GEN-LAST:event_btnLimpaActionPerformed

	private void btnComecaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnComecaActionPerformed
		try {
			lblCon.setText("aguardando conexão...");
			srv = new ServerSocket(Integer.parseInt(txtPorta.getText()));
			lblCon.setText("conectado ao Miolo");
			lblCon.repaint();
			para = false;
			btnPara.setEnabled(true);
			btnComeca.setEnabled(false);
			txtPorta.setEnabled(false);
			execute();
		} catch (Exception e) {
			lblCon.setText("não conectado");
			JOptionPane.showMessageDialog(this,
					"Erro na conexão: " + e.getMessage());
		}
	}// GEN-LAST:event_btnComecaActionPerformed

	private void btnSobreActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSobreActionPerformed
		frmSobre.main(null);
	}// GEN-LAST:event_btnSobreActionPerformed

	private void chbLimpaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_chbLimpaActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_chbLimpaActionPerformed

	public void execute() {
		th = new Thread(new Runnable() {
			@Override
			public void run() {
				String vRetorno, vMensagem;
				Date data;
				int cont = 0;
				boolean flagCustom = false;
				try {
					skt = srv.accept();
					in = new BufferedReader(new InputStreamReader(
							skt.getInputStream()));
					while (!Thread.currentThread().isInterrupted()) {
						if (para)
							break;
						while ((vRetorno = in.readLine()) != null) {
							vRetorno = vRetorno + "\n";
							cont++;
							if (vRetorno.startsWith("[RESET_LOG_MESSAGES]")) {
								txaAtual.setText("");
								data = new Date();
								txaAtual.append("[INIT] Processo iniciando em "
										+ dateFormat.format(data) + "\n");
								cont = 0;
							}
							vMensagem = cont + ": " + vRetorno;
							cont++;
							txaTodas.append(vMensagem);
							txaTodas.setCaretPosition(txaTodas.getDocument()
									.getLength());
							txaAtual.append(vRetorno);
							txaAtual.setCaretPosition(txaAtual.getDocument()
									.getLength());
							if (vRetorno.startsWith("[TRACE]")) {
								txaTrace.append(vMensagem);
								txaTrace.setCaretPosition(txaTrace
										.getDocument().getLength());
								flagCustom = false;
							}
							if (vRetorno.startsWith("[USES]")) {
								txaUses.append(vMensagem);
								txaUses.setCaretPosition(txaUses.getDocument()
										.getLength());
								flagCustom = false;
							}
							if (vRetorno.startsWith("[SQL]")) {
								txaSQL.append(vMensagem);
								txaSQL.setCaretPosition(txaSQL.getDocument()
										.getLength());
								flagCustom = false;
							}
							if (vRetorno.startsWith("[LOGIN]")) {
								txaLogin.append(vMensagem);
								txaLogin.setCaretPosition(txaLogin
										.getDocument().getLength());
								flagCustom = false;
							}
							if (vRetorno.startsWith("[HANDLER]")) {
								txaHandler.append(vMensagem);
								txaHandler.setCaretPosition(txaHandler
										.getDocument().getLength());
								flagCustom = false;
							}
							if (vRetorno.startsWith("[PROFILE]")) {
								txaProfile.append(vMensagem);
								txaProfile.setCaretPosition(txaProfile
										.getDocument().getLength());
								flagCustom = false;
							}
							if ((vRetorno.startsWith("[ERRORS]"))
									|| (vRetorno.startsWith("[ERROR]"))) {
								txaError.append(vMensagem);
								txaError.setCaretPosition(txaError
										.getDocument().getLength());
								flagCustom = false;
							}
							if ((vRetorno.startsWith("[CUSTOM]"))
									|| (flagCustom == true)) {
								txaCustom.append(vMensagem);
								txaCustom.setCaretPosition(txaCustom
										.getDocument().getLength());
								flagCustom = true;
							}
							th.sleep(10);
							if ((cont > 1000) && (chbLimpa.isSelected())) {
								cont = 0;
								btnLimpaActionPerformed(null);
							}
						}
						if (!in.ready()) {
							skt.close();
							skt = srv.accept();
							in = new BufferedReader(new InputStreamReader(
									skt.getInputStream()));
							th.sleep(100);
						}
					}
					System.out.println("SAIU DO LOOP!");
				} catch (Exception e) {
					System.out.println("Erro: " + e.getMessage());
				}
			}
		});
		th.start();

		txtBusca.getDocument().addDocumentListener(new DocumentListener() {
			public void changedUpdate(DocumentEvent e) {
				warn();
			}

			public void removeUpdate(DocumentEvent e) {
				warn();
			}

			public void insertUpdate(DocumentEvent e) {
				warn();
			}

			public void warn() {
				try {
					txaBusca.setText("");
					int length = txaTodas.getDocument().getLength();
					String fullLog = txaTodas.getDocument().getText(0, length);
					String lines[] = fullLog.split("\\r?\\n");
					for (String line : lines) {
						if (line.toLowerCase().contains(
								txtBusca.getText().toLowerCase())) {
							txaBusca.append(line + "\n");
						}
					}
				} catch (Exception e) {
					System.out.println(e.toString());
				}
			}
		});
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new frmMain().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnComeca;
	private javax.swing.JButton btnLimpa;
	private javax.swing.JButton btnPara;
	private javax.swing.JButton btnSobre;
	private javax.swing.JCheckBox chbLimpa;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane10;
	private javax.swing.JScrollPane jScrollPane11;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JScrollPane jScrollPane4;
	private javax.swing.JScrollPane jScrollPane5;
	private javax.swing.JScrollPane jScrollPane6;
	private javax.swing.JScrollPane jScrollPane7;
	private javax.swing.JScrollPane jScrollPane8;
	private javax.swing.JScrollPane jScrollPane9;
	private javax.swing.JTabbedPane jTabbedPane1;
	private javax.swing.JLabel lblCon;
	private javax.swing.JTextArea txaAtual;
	private javax.swing.JTextArea txaCustom;
	private javax.swing.JTextArea txaError;
	private javax.swing.JTextArea txaHandler;
	private javax.swing.JTextArea txaLogin;
	private javax.swing.JTextArea txaProfile;
	private javax.swing.JTextArea txaSQL;
	private javax.swing.JTextArea txaTodas;
	private javax.swing.JTextArea txaTrace;
	private javax.swing.JTextArea txaUses;
	private javax.swing.JTextArea txaBusca;
	private javax.swing.JTextField txtPorta;
	private javax.swing.JTextField txtBusca;
	// End of variables declaration//GEN-END:variables
	private DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
	private static int cont;
	private static BufferedReader in;
	public static Thread th;
	public static boolean para = false;
	public static ServerSocket srv;
	public static Socket skt;

}
